{"version":3,"sources":["webpack:///./src/components/SEO.tsx","webpack:///./src/hooks/use-site-metadata.ts","webpack:///./src/pages/404.tsx"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","garden","metaDescription","siteMetadata","defaultTitle","metaInfo","name","content","property","siteUrl","author","Helmet","htmlAttributes","titleTemplate","undefined","NotFoundPage"],"mappings":"iJA+EeA,IApEf,YAK2B,QCdU,EDcV,IAJzBC,mBAIyB,MAJX,GAIW,MAHzBC,YAGyB,MAHlB,KAGkB,MAFzBC,YAEyB,MAFlB,GAEkB,EADzBC,EACyB,EADzBA,MACyB,ECKlB,CAACC,MAnB2B,EACZC,yBAAe,cAA/BD,KAkBOE,OAnBqB,EACtBA,QDcNF,EADkB,EAClBA,KAAME,EADY,EACZA,OAEPC,EAAkBP,GAAeI,EAAKI,aAAaR,YACnDS,EAAY,UAAGL,EAAKI,oBAAR,aAAG,EAAmBL,MAClCO,EAAW,CACf,CACEC,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAAST,GAEX,CACEU,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACEC,SAAU,WACVD,QAASN,GAEX,CACEO,SAAU,SACVD,QAASR,EAAKI,aAAaM,SAE7B,CACEH,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,SAAS,UAAAR,EAAKI,oBAAL,eAAmBO,SAAnB,IAEX,CACEJ,KAAM,gBACNC,QAAST,GAEX,CACEQ,KAAM,gBACNC,QAASN,GAEX,CACEK,KAAM,sBACNC,QAASL,IAGb,OACE,wBAACS,EAAA,OAAD,CACEC,eAAgB,CACdhB,QAEFE,MAAOA,EACPe,cAAeT,EAAe,QAAQA,OAAiBU,EACvDjB,KAAI,sBAAMA,GAASQ,O,oCE1EzB,mCAWeU,UARM,kBACnB,gDACE,wBAAC,IAAD,CAAKjB,MAAM,mBACX,oDACA","file":"component---src-pages-404-tsx-5bd97e048aedfe037776.js","sourcesContent":["import React, {ReactElement} from 'react'\nimport {Helmet} from 'react-helmet'\nimport {useSiteMetadata} from '../hooks/use-site-metadata'\n\ninterface SEOProps {\n  description?: string\n  lang?: string\n  meta?: object[]\n  title: string\n}\n\nfunction SEO({\n  description = '',\n  lang = 'en',\n  meta = [],\n  title,\n}: SEOProps): ReactElement {\n  const {site, garden} = useSiteMetadata()\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const metaInfo = [\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:title`,\n      content: title,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      property: `og:image`,\n      content: garden,\n    },\n    {\n      property: `og:url`,\n      content: site.siteMetadata.siteUrl,\n    },\n    {\n      name: `twitter:card`,\n      content: `summary`,\n    },\n    {\n      name: `twitter:creator`,\n      content: site.siteMetadata?.author || ``,\n    },\n    {\n      name: `twitter:title`,\n      content: title,\n    },\n    {\n      name: `twitter:image`,\n      content: garden,\n    },\n    {\n      name: `twitter:description`,\n      content: metaDescription,\n    },\n  ]\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n      meta={[...meta, ...metaInfo]}\n    />\n  )\n}\n\nexport default SEO\n","import {useStaticQuery, graphql} from 'gatsby'\n\nexport const useSiteMetadata = () => {\n  const {site, garden} = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n      garden: file(name: {eq: \"garden\"}) {\n        childImageSharp {\n          fixed(width: 1024) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n  return {site, garden}\n}\n","import React from 'react'\nimport SEO from '../components/SEO'\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}